(function() {var implementors = {};
implementors["libslide"] = [{"text":"impl Freeze for Assignment","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for BinaryExpr&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for InternedStr","synthetic":true,"types":[]},{"text":"impl Freeze for RcExpr","synthetic":true,"types":[]},{"text":"impl Freeze for Stmt","synthetic":true,"types":[]},{"text":"impl Freeze for StmtList","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for UnaryExpr&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Span","synthetic":true,"types":[]},{"text":"impl Freeze for ProgramContext","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ParseResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for EvaluationResult","synthetic":true,"types":[]},{"text":"impl Freeze for Poly","synthetic":true,"types":[]},{"text":"impl Freeze for EmitConfig","synthetic":true,"types":[]},{"text":"impl Freeze for Expr","synthetic":true,"types":[]},{"text":"impl Freeze for ExprPat","synthetic":true,"types":[]},{"text":"impl Freeze for StmtKind","synthetic":true,"types":[]},{"text":"impl Freeze for EmitFormat","synthetic":true,"types":[]},{"text":"impl Freeze for BinaryOperator","synthetic":true,"types":[]},{"text":"impl Freeze for UnaryOperator","synthetic":true,"types":[]},{"text":"impl Freeze for INTERNED_STRS","synthetic":true,"types":[]},{"text":"impl Freeze for EMPTY_STR","synthetic":true,"types":[]},{"text":"impl Freeze for RcExprPat","synthetic":true,"types":[]},{"text":"impl Freeze for VarNameCollector","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for VarAsgnsCollector&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PatternCollector&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for StmtListIterator","synthetic":true,"types":[]},{"text":"impl Freeze for AssignmentOp","synthetic":true,"types":[]},{"text":"impl Freeze for AssociatedDiagnostic","synthetic":true,"types":[]},{"text":"impl Freeze for Diagnostic","synthetic":true,"types":[]},{"text":"impl Freeze for DiagnosticKind","synthetic":true,"types":[]},{"text":"impl Freeze for ScanErrors","synthetic":true,"types":[]},{"text":"impl Freeze for ScanResult","synthetic":true,"types":[]},{"text":"impl Freeze for Scanner","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidToken","synthetic":true,"types":[]},{"text":"impl Freeze for Token","synthetic":true,"types":[]},{"text":"impl Freeze for TokenType","synthetic":true,"types":[]},{"text":"impl Freeze for ExtraTokens","synthetic":true,"types":[]},{"text":"impl Freeze for ExpectedExpr","synthetic":true,"types":[]},{"text":"impl Freeze for MismatchedClosingDelimiter","synthetic":true,"types":[]},{"text":"impl Freeze for IllegalPattern","synthetic":true,"types":[]},{"text":"impl Freeze for IllegalVariable","synthetic":true,"types":[]},{"text":"impl Freeze for UnmatchedClosingDelimiter","synthetic":true,"types":[]},{"text":"impl Freeze for ParseErrors","synthetic":true,"types":[]},{"text":"impl Freeze for ExpressionPatternParser","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ExpressionParser&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for LintConfig","synthetic":true,"types":[]},{"text":"impl Freeze for StmtLintRule","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for HomogenousAssignmentLinter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for RedundantNestingLinter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for UnarySeriesLinter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ExprPatLintRule","synthetic":true,"types":[]},{"text":"impl Freeze for NameCollection","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SimilarNamesLinter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for NameKind","synthetic":true,"types":[]},{"text":"impl Freeze for IncompatibleDefinitions","synthetic":true,"types":[]},{"text":"impl Freeze for MaybeIncompatibleDefinitions","synthetic":true,"types":[]},{"text":"impl Freeze for PartialEvaluatorErrors","synthetic":true,"types":[]},{"text":"impl Freeze for EqRelation","synthetic":true,"types":[]},{"text":"impl Freeze for PEValidator","synthetic":true,"types":[]},{"text":"impl Freeze for IncompatibleDefinitionsValidator","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for EagerVariableExpander&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for LazyVariableExpander&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for PatternMatch&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RuleSet","synthetic":true,"types":[]},{"text":"impl Freeze for BuildRuleErrors","synthetic":true,"types":[]},{"text":"impl Freeze for RuleName","synthetic":true,"types":[]},{"text":"impl Freeze for PatternMap","synthetic":true,"types":[]},{"text":"impl Freeze for UnresolvedMapping","synthetic":true,"types":[]},{"text":"impl Freeze for Rule","synthetic":true,"types":[]},{"text":"impl Freeze for UnbuiltRule","synthetic":true,"types":[]},{"text":"impl Freeze for Dec2FracError","synthetic":true,"types":[]},{"text":"impl Freeze for UnflattenStrategy","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Freeze for PeekingTakeWhile&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for PeekIter&lt;T&gt;","synthetic":true,"types":[]}];
implementors["slide"] = [{"text":"impl Freeze for Opts","synthetic":true,"types":[]},{"text":"impl Freeze for SlideResult","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SlideResultBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ProgramEvaluator&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["slide_ls"] = [{"text":"impl Freeze for ProgramInfo","synthetic":true,"types":[]},{"text":"impl !Freeze for SlideLS","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ExprFinder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ReferenceFinder","synthetic":true,"types":[]},{"text":"impl Freeze for ReferenceKind","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()