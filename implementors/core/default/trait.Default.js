(function() {var implementors = {};
implementors["libslide"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"libslide/struct.ProgramContext.html\" title=\"struct libslide::ProgramContext\">ProgramContext</a>","synthetic":false,"types":["libslide::common::ProgramContext"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"libslide/linter/expr_pat/similar_names/struct.NameCollection.html\" title=\"struct libslide::linter::expr_pat::similar_names::NameCollection\">NameCollection</a>","synthetic":false,"types":["libslide::linter::expr_pat::similar_names::NameCollection"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"libslide/linter/expr_pat/similar_names/struct.SimilarNamesLinter.html\" title=\"struct libslide::linter::expr_pat::similar_names::SimilarNamesLinter\">SimilarNamesLinter</a>&lt;'a&gt;","synthetic":false,"types":["libslide::linter::expr_pat::similar_names::SimilarNamesLinter"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"libslide/linter/struct.LintConfig.html\" title=\"struct libslide::linter::LintConfig\">LintConfig</a>","synthetic":false,"types":["libslide::linter::LintConfig"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"libslide/partial_evaluator/validate/incompatible_definitions/struct.IncompatibleDefinitionsValidator.html\" title=\"struct libslide::partial_evaluator::validate::incompatible_definitions::IncompatibleDefinitionsValidator\">IncompatibleDefinitionsValidator</a>&lt;'a&gt;","synthetic":false,"types":["libslide::partial_evaluator::validate::incompatible_definitions::IncompatibleDefinitionsValidator"]},{"text":"impl&lt;E:&nbsp;<a class=\"trait\" href=\"libslide/grammar/intern/trait.RcExpression.html\" title=\"trait libslide::grammar::intern::RcExpression\">RcExpression</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"libslide/evaluator_rules/pattern_match/struct.PatternMatch.html\" title=\"struct libslide::evaluator_rules::pattern_match::PatternMatch\">PatternMatch</a>&lt;E&gt;","synthetic":false,"types":["libslide::evaluator_rules::pattern_match::PatternMatch"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"libslide/evaluator_rules/registry/struct.RuleSet.html\" title=\"struct libslide::evaluator_rules::registry::RuleSet\">RuleSet</a>","synthetic":false,"types":["libslide::evaluator_rules::registry::RuleSet"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"libslide/struct.Poly.html\" title=\"struct libslide::Poly\">Poly</a>","synthetic":false,"types":["libslide::math::poly::Poly"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"libslide/struct.EmitConfig.html\" title=\"struct libslide::EmitConfig\">EmitConfig</a>","synthetic":false,"types":["libslide::emit::EmitConfig"]}];
implementors["slide"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"slide/struct.SlideResult.html\" title=\"struct slide::SlideResult\">SlideResult</a>","synthetic":false,"types":["slide::SlideResult"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()