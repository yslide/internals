(function() {var implementors = {};
implementors["libslide"] = [{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/struct.StmtList.html\" title=\"struct libslide::StmtList\">StmtList</a>","synthetic":true,"types":["libslide::grammar::statement::StmtList"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/struct.Span.html\" title=\"struct libslide::Span\">Span</a>","synthetic":true,"types":["libslide::common::Span"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/struct.ProgramContext.html\" title=\"struct libslide::ProgramContext\">ProgramContext</a>","synthetic":true,"types":["libslide::common::ProgramContext"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/struct.Poly.html\" title=\"struct libslide::Poly\">Poly</a>","synthetic":true,"types":["libslide::math::poly::Poly"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/struct.EmitConfig.html\" title=\"struct libslide::EmitConfig\">EmitConfig</a>","synthetic":true,"types":["libslide::emit::EmitConfig"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/enum.ExprPat.html\" title=\"enum libslide::ExprPat\">ExprPat</a>","synthetic":true,"types":["libslide::grammar::expression_pattern::ExprPat"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/enum.Stmt.html\" title=\"enum libslide::Stmt\">Stmt</a>","synthetic":true,"types":["libslide::grammar::statement::Stmt"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/enum.EmitFormat.html\" title=\"enum libslide::EmitFormat\">EmitFormat</a>","synthetic":true,"types":["libslide::emit::EmitFormat"]},{"text":"impl&lt;E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/grammar/struct.BinaryExpr.html\" title=\"struct libslide::grammar::BinaryExpr\">BinaryExpr</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["libslide::grammar::BinaryExpr"]},{"text":"impl&lt;E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/grammar/struct.UnaryExpr.html\" title=\"struct libslide::grammar::UnaryExpr\">UnaryExpr</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["libslide::grammar::UnaryExpr"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/grammar/enum.BinaryOperator.html\" title=\"enum libslide::grammar::BinaryOperator\">BinaryOperator</a>","synthetic":true,"types":["libslide::grammar::BinaryOperator"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/grammar/enum.UnaryOperator.html\" title=\"enum libslide::grammar::UnaryOperator\">UnaryOperator</a>","synthetic":true,"types":["libslide::grammar::UnaryOperator"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/grammar/intern/struct.INTERNED_STRS.html\" title=\"struct libslide::grammar::intern::INTERNED_STRS\">INTERNED_STRS</a>","synthetic":true,"types":["libslide::grammar::intern::INTERNED_STRS"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/grammar/intern/struct.EMPTY_STR.html\" title=\"struct libslide::grammar::intern::EMPTY_STR\">EMPTY_STR</a>","synthetic":true,"types":["libslide::grammar::intern::EMPTY_STR"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/grammar/intern/struct.InternedStr.html\" title=\"struct libslide::grammar::intern::InternedStr\">InternedStr</a>","synthetic":true,"types":["libslide::grammar::intern::InternedStr"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/grammar/intern/struct.RcExpr.html\" title=\"struct libslide::grammar::intern::RcExpr\">RcExpr</a>","synthetic":true,"types":["libslide::grammar::intern::RcExpr"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/grammar/intern/struct.RcExprPat.html\" title=\"struct libslide::grammar::intern::RcExprPat\">RcExprPat</a>","synthetic":true,"types":["libslide::grammar::intern::RcExprPat"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/grammar/statement/struct.StmtListIterator.html\" title=\"struct libslide::grammar::statement::StmtListIterator\">StmtListIterator</a>","synthetic":true,"types":["libslide::grammar::statement::StmtListIterator"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/grammar/statement/struct.Assignment.html\" title=\"struct libslide::grammar::statement::Assignment\">Assignment</a>","synthetic":true,"types":["libslide::grammar::statement::Assignment"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/grammar/statement/enum.AssignmentOp.html\" title=\"enum libslide::grammar::statement::AssignmentOp\">AssignmentOp</a>","synthetic":true,"types":["libslide::grammar::statement::AssignmentOp"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/grammar/statement/enum.Expr.html\" title=\"enum libslide::grammar::statement::Expr\">Expr</a>","synthetic":true,"types":["libslide::grammar::statement::Expr"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/diagnostics/struct.AssociatedDiagnostic.html\" title=\"struct libslide::diagnostics::AssociatedDiagnostic\">AssociatedDiagnostic</a>","synthetic":true,"types":["libslide::diagnostics::AssociatedDiagnostic"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/diagnostics/struct.Diagnostic.html\" title=\"struct libslide::diagnostics::Diagnostic\">Diagnostic</a>","synthetic":true,"types":["libslide::diagnostics::Diagnostic"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/diagnostics/enum.DiagnosticKind.html\" title=\"enum libslide::diagnostics::DiagnosticKind\">DiagnosticKind</a>","synthetic":true,"types":["libslide::diagnostics::DiagnosticKind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/scanner/struct.ScanErrors.html\" title=\"struct libslide::scanner::ScanErrors\">ScanErrors</a>","synthetic":true,"types":["libslide::scanner::errors::ScanErrors"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/scanner/struct.ScanResult.html\" title=\"struct libslide::scanner::ScanResult\">ScanResult</a>","synthetic":true,"types":["libslide::scanner::ScanResult"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/scanner/struct.Scanner.html\" title=\"struct libslide::scanner::Scanner\">Scanner</a>","synthetic":true,"types":["libslide::scanner::Scanner"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/scanner/errors/struct.InvalidToken.html\" title=\"struct libslide::scanner::errors::InvalidToken\">InvalidToken</a>","synthetic":true,"types":["libslide::scanner::errors::InvalidToken"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/scanner/types/struct.Token.html\" title=\"struct libslide::scanner::types::Token\">Token</a>","synthetic":true,"types":["libslide::scanner::types::Token"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/scanner/types/enum.TokenType.html\" title=\"enum libslide::scanner::types::TokenType\">TokenType</a>","synthetic":true,"types":["libslide::scanner::types::TokenType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/parser/errors/struct.ExtraTokens.html\" title=\"struct libslide::parser::errors::ExtraTokens\">ExtraTokens</a>","synthetic":true,"types":["libslide::parser::errors::ExtraTokens"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/parser/errors/struct.ExpectedExpr.html\" title=\"struct libslide::parser::errors::ExpectedExpr\">ExpectedExpr</a>","synthetic":true,"types":["libslide::parser::errors::ExpectedExpr"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/parser/errors/struct.MismatchedClosingDelimiter.html\" title=\"struct libslide::parser::errors::MismatchedClosingDelimiter\">MismatchedClosingDelimiter</a>","synthetic":true,"types":["libslide::parser::errors::MismatchedClosingDelimiter"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/parser/errors/struct.IllegalPattern.html\" title=\"struct libslide::parser::errors::IllegalPattern\">IllegalPattern</a>","synthetic":true,"types":["libslide::parser::errors::IllegalPattern"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/parser/errors/struct.IllegalVariable.html\" title=\"struct libslide::parser::errors::IllegalVariable\">IllegalVariable</a>","synthetic":true,"types":["libslide::parser::errors::IllegalVariable"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/parser/errors/struct.UnmatchedClosingDelimiter.html\" title=\"struct libslide::parser::errors::UnmatchedClosingDelimiter\">UnmatchedClosingDelimiter</a>","synthetic":true,"types":["libslide::parser::errors::UnmatchedClosingDelimiter"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/parser/errors/struct.ParseErrors.html\" title=\"struct libslide::parser::errors::ParseErrors\">ParseErrors</a>","synthetic":true,"types":["libslide::parser::errors::ParseErrors"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/parser/expression_pattern_parser/struct.ExpressionPatternParser.html\" title=\"struct libslide::parser::expression_pattern_parser::ExpressionPatternParser\">ExpressionPatternParser</a>","synthetic":true,"types":["libslide::parser::expression_pattern_parser::ExpressionPatternParser"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/parser/statement_parser/struct.ExpressionParser.html\" title=\"struct libslide::parser::statement_parser::ExpressionParser\">ExpressionParser</a>&lt;'a&gt;","synthetic":true,"types":["libslide::parser::statement_parser::ExpressionParser"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/linter/struct.LintConfig.html\" title=\"struct libslide::linter::LintConfig\">LintConfig</a>","synthetic":true,"types":["libslide::linter::LintConfig"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/linter/stmt/enum.StmtLintRule.html\" title=\"enum libslide::linter::stmt::StmtLintRule\">StmtLintRule</a>","synthetic":true,"types":["libslide::linter::stmt::StmtLintRule"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/linter/stmt/homogenous_assignment/struct.HomogenousAssignmentLinter.html\" title=\"struct libslide::linter::stmt::homogenous_assignment::HomogenousAssignmentLinter\">HomogenousAssignmentLinter</a>&lt;'a&gt;","synthetic":true,"types":["libslide::linter::stmt::homogenous_assignment::HomogenousAssignmentLinter"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/linter/stmt/redundant_nesting/struct.RedundantNestingLinter.html\" title=\"struct libslide::linter::stmt::redundant_nesting::RedundantNestingLinter\">RedundantNestingLinter</a>&lt;'a&gt;","synthetic":true,"types":["libslide::linter::stmt::redundant_nesting::RedundantNestingLinter"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/linter/stmt/unary_series/struct.UnarySeriesLinter.html\" title=\"struct libslide::linter::stmt::unary_series::UnarySeriesLinter\">UnarySeriesLinter</a>&lt;'a&gt;","synthetic":true,"types":["libslide::linter::stmt::unary_series::UnarySeriesLinter"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/linter/expr_pat/enum.ExprPatLintRule.html\" title=\"enum libslide::linter::expr_pat::ExprPatLintRule\">ExprPatLintRule</a>","synthetic":true,"types":["libslide::linter::expr_pat::ExprPatLintRule"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/linter/expr_pat/similar_names/struct.NameCollection.html\" title=\"struct libslide::linter::expr_pat::similar_names::NameCollection\">NameCollection</a>","synthetic":true,"types":["libslide::linter::expr_pat::similar_names::NameCollection"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/linter/expr_pat/similar_names/struct.SimilarNamesLinter.html\" title=\"struct libslide::linter::expr_pat::similar_names::SimilarNamesLinter\">SimilarNamesLinter</a>&lt;'a&gt;","synthetic":true,"types":["libslide::linter::expr_pat::similar_names::SimilarNamesLinter"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/linter/expr_pat/similar_names/enum.NameKind.html\" title=\"enum libslide::linter::expr_pat::similar_names::NameKind\">NameKind</a>","synthetic":true,"types":["libslide::linter::expr_pat::similar_names::NameKind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/partial_evaluator/errors/struct.IncompatibleDefinitions.html\" title=\"struct libslide::partial_evaluator::errors::IncompatibleDefinitions\">IncompatibleDefinitions</a>","synthetic":true,"types":["libslide::partial_evaluator::errors::IncompatibleDefinitions"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/partial_evaluator/errors/struct.MaybeIncompatibleDefinitions.html\" title=\"struct libslide::partial_evaluator::errors::MaybeIncompatibleDefinitions\">MaybeIncompatibleDefinitions</a>","synthetic":true,"types":["libslide::partial_evaluator::errors::MaybeIncompatibleDefinitions"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/partial_evaluator/errors/struct.PartialEvaluatorErrors.html\" title=\"struct libslide::partial_evaluator::errors::PartialEvaluatorErrors\">PartialEvaluatorErrors</a>","synthetic":true,"types":["libslide::partial_evaluator::errors::PartialEvaluatorErrors"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/partial_evaluator/validate/enum.PEValidator.html\" title=\"enum libslide::partial_evaluator::validate::PEValidator\">PEValidator</a>","synthetic":true,"types":["libslide::partial_evaluator::validate::PEValidator"]},{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/partial_evaluator/validate/incompatible_definitions/struct.IncompatibleDefinitionsValidator.html\" title=\"struct libslide::partial_evaluator::validate::incompatible_definitions::IncompatibleDefinitionsValidator\">IncompatibleDefinitionsValidator</a>&lt;'a&gt;","synthetic":true,"types":["libslide::partial_evaluator::validate::incompatible_definitions::IncompatibleDefinitionsValidator"]},{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/partial_evaluator/variable_expand/struct.EagerVariableExpander.html\" title=\"struct libslide::partial_evaluator::variable_expand::EagerVariableExpander\">EagerVariableExpander</a>&lt;'a&gt;","synthetic":true,"types":["libslide::partial_evaluator::variable_expand::EagerVariableExpander"]},{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/partial_evaluator/variable_expand/struct.LazyVariableExpander.html\" title=\"struct libslide::partial_evaluator::variable_expand::LazyVariableExpander\">LazyVariableExpander</a>&lt;'a&gt;","synthetic":true,"types":["libslide::partial_evaluator::variable_expand::LazyVariableExpander"]},{"text":"impl&lt;E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/evaluator_rules/pattern_match/struct.PatternMatch.html\" title=\"struct libslide::evaluator_rules::pattern_match::PatternMatch\">PatternMatch</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["libslide::evaluator_rules::pattern_match::PatternMatch"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/evaluator_rules/registry/struct.RuleSet.html\" title=\"struct libslide::evaluator_rules::registry::RuleSet\">RuleSet</a>","synthetic":true,"types":["libslide::evaluator_rules::registry::RuleSet"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/evaluator_rules/registry/struct.BuildRuleErrors.html\" title=\"struct libslide::evaluator_rules::registry::BuildRuleErrors\">BuildRuleErrors</a>","synthetic":true,"types":["libslide::evaluator_rules::registry::BuildRuleErrors"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/evaluator_rules/registry/enum.RuleName.html\" title=\"enum libslide::evaluator_rules::registry::RuleName\">RuleName</a>","synthetic":true,"types":["libslide::evaluator_rules::registry::RuleName"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/evaluator_rules/rule/struct.PatternMap.html\" title=\"struct libslide::evaluator_rules::rule::PatternMap\">PatternMap</a>","synthetic":true,"types":["libslide::evaluator_rules::rule::PatternMap"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/evaluator_rules/rule/struct.UnresolvedMapping.html\" title=\"struct libslide::evaluator_rules::rule::UnresolvedMapping\">UnresolvedMapping</a>","synthetic":true,"types":["libslide::evaluator_rules::rule::UnresolvedMapping"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/evaluator_rules/rule/enum.Rule.html\" title=\"enum libslide::evaluator_rules::rule::Rule\">Rule</a>","synthetic":true,"types":["libslide::evaluator_rules::rule::Rule"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/evaluator_rules/unbuilt_rule/enum.UnbuiltRule.html\" title=\"enum libslide::evaluator_rules::unbuilt_rule::UnbuiltRule\">UnbuiltRule</a>","synthetic":true,"types":["libslide::evaluator_rules::unbuilt_rule::UnbuiltRule"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/math/fraction/struct.Dec2FracError.html\" title=\"struct libslide::math::fraction::Dec2FracError\">Dec2FracError</a>","synthetic":true,"types":["libslide::math::fraction::Dec2FracError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libslide/utils/grammar/enum.UnflattenStrategy.html\" title=\"enum libslide::utils::grammar::UnflattenStrategy\">UnflattenStrategy</a>","synthetic":true,"types":["libslide::utils::grammar::UnflattenStrategy"]},{"text":"impl&lt;'a, T, P&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/utils/iter/struct.PeekingTakeWhile.html\" title=\"struct libslide::utils::iter::PeekingTakeWhile\">PeekingTakeWhile</a>&lt;'a, T, P&gt;","synthetic":true,"types":["libslide::utils::iter::PeekingTakeWhile"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libslide/utils/iter/struct.PeekIter.html\" title=\"struct libslide::utils::iter::PeekIter\">PeekIter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["libslide::utils::iter::PeekIter"]}];
implementors["slide"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"slide/struct.Opts.html\" title=\"struct slide::Opts\">Opts</a>","synthetic":true,"types":["slide::Opts"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"slide/struct.SlideResult.html\" title=\"struct slide::SlideResult\">SlideResult</a>","synthetic":true,"types":["slide::SlideResult"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"slide/struct.SlideResultBuilder.html\" title=\"struct slide::SlideResultBuilder\">SlideResultBuilder</a>&lt;'a&gt;","synthetic":true,"types":["slide::SlideResultBuilder"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"slide/struct.ProgramEvaluator.html\" title=\"struct slide::ProgramEvaluator\">ProgramEvaluator</a>&lt;'a&gt;","synthetic":true,"types":["slide::ProgramEvaluator"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()